[config]
default_to_workspace = false


[tasks.wasm32-target]
install_script = '''
    if [ "$(rustup target list | grep wasm32-unknown-unknown | grep installed)" = "" ];
    then
        rustup target add wasm32-unknown-unknown;
    fi
'''

[tasks.client-clean]
script = "rm -Rf ./build"

[tasks.client-build]
dependencies = [ "wasm32-target", "client-clean" ]
install_crate = { crate_name = "wasm-pack", binary = "wasm-pack", test_arg = ["--version"] }
script = [
    "wasm-pack build panel/client --no-typescript --target web --out-dir ../../build --out-name app --release",
    "rm ./build/.gitignore",
    "rm ./build/package.json",
]


#example
#cargo make --env GIT_REPO=/Users/grzegorzszeliga/Desktop/notatki_main/notatki app-serve

[tasks.app-serve]
command = "cargo"
env = { "RUST_LOG" = "info", "HTTP_HOST" = "0.0.0.0", "HTTP_PORT" = "4000"}
args = [ "run", "--bin", "server" ]



#example
#cargo make --env GIT_REPO=/Users/grzegorzszeliga/Desktop/notatki_main/notatki app-start

[tasks.app-start]
dependencies = [
    "client-build",
]
run_task = "app-serve"



[tasks.app-my-start]
env = { "GIT_REPO" = "/Users/grzegorzszeliga/Desktop/notatki_main/notatki_dane" }
run_task = "app-start"
